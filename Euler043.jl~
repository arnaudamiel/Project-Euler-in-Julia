#The number, 1406357289, is a 0 to 9 pandigital number because it is made up of each of the digits 0 to 9 in some order, but it also has a rather interesting sub-string divisibility property.
 
#Let d1 be the 1st digit, d2 be the 2nd digit, and so on. In this way, we note the following:
# d2d3d4=406 is divisible by 2
# d3d4d5=063 is divisible by 3
# d4d5d6=635 is divisible by 5
# d5d6d7=357 is divisible by 7
# d6d7d8=572 is divisible by 11
# d7d8d9=728 is divisible by 13
# d8d9d10=289 is divisible by 17
 
#Find the sum of all 0 to 9 pandigital numbers with this property.

function number(theDigits)
    counter = 0
    for i = 1:length(theDigits)
        counter *= 10
        counter += theDigits[i]
    end
    counter
end

function solve043()

    result = 0

    for i in permutations([0:9])

        if i[1] != 0

            if i[4] % 2 != 0
                continue
            end
            if ((i[6] != 0) && (i[6] != 5))
                continue
            end
            if number(i[3:5]) % 3 != 0
                continue
            end
            if number(i[5:7]) % 7 != 0
                continue
            end
            if number(i[6:8]) % 11 != 0
                continue
            end
            if number(i[7:9]) % 13 != 0
                continue
            end
            if number(i[8:10]) % 17 != 0
                continue
            end

            result += number(i)

        end

    end

    result

end

solve043()

require("Euler043Support.jl")

function solve043p()
    
    result = 0

    result = @parallel (+) for i in permutations([0:9])

        tests(i)

    end

    result

end

#16695334890  
